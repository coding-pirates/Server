apply plugin: "java" //enables java settings for gradle
apply plugin: "application" //adds a run task for this project

apply from: "${rootProject.rootDir}/gradle/javadoc.gradle"

dependencies {
    //adds maven dependencies for gradle to download
    //implementation means the files will be compiled into the jar
    //testImplementation means the files will only compiled for testing purpose and not served in the final programm

    //adds local network & logic files as dependencies
    implementation project(":ai")
    implementation project(":network")
    implementation project(":logic")

    implementation group: 'org.jetbrains', name: 'annotations', version: '18.0.0'

    implementation group: 'com.google.inject', name: 'guice', version: '4.2.2'

    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.3'
    runtime group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.3'

    implementation group: 'com.google.guava', name: 'guava', version: '28.1-jre'

    implementation group: 'com.google.code.gson', name: 'gson', version: '2.7'

    //test dependencies
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.5.2'
    testImplementation project(":client")
}

//set java version for the resulting java bytecode & java version of the dev environment
targetCompatibility = '1.8'
sourceCompatibility = '1.8'

mainClassName = 'de.upb.codingpirates.battleships.server.BattleshipsServerApplication' //mainClass must be specified for the application plugin

//sets sourceSets for the project
sourceSets {
    main {
        java {
            srcDirs = ["src/main/java"]
        }
        resources {
            srcDirs = ["src/main/resources"]
        }
    }
    test {
        java {
            srcDirs = ["src/test/java"]
        }
    }
}

//enable Junit as testing platform for gradle to use for gradle task "test"
test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

jar{
    baseName = "server_${project.server_version}"
    manifest {
        attributes 'Implementation-Title': 'Battleships Server',
                'Implementation-Version': "${project.server_version}",
                'Main-Class': 'de.upb.codingpirates.battleships.server.BattleshipsServerApplication'
    }
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}
